---
import GeneralLayout from "../../layouts/GeneralLayout.astro";
import { Image } from "astro:assets";
import HeroSeccion from "../../components/HeroSeccion.astro";
import { API_CONFIG } from "../../config/api.js";

// Definición de tipos para los artículos
interface ArticleImage {
    id: number;
    url: string;
    display_order: number;
}

interface ArticleContent {
    type: string;
    content: string;
}

interface ArticleComment {
    id: number;
    author_name: string | null;
    author_email: string | null;
    content: string | null;
    created_at: string;
    created_at_formatted: string;
}

interface Article {
    id: number;
    title: string;
    slug: string;
    description: string;
    publication_date: string;
    publication_date_formatted: string;
    meta_title: string;
    meta_description: string;
    keywords: string[];
    images: ArticleImage[];
    featured_image: string;
    created_at: string;
    updated_at: string;
    content_preview: string;
    content: ArticleContent[];
    content_html: string;
    comments: ArticleComment[];
}

export async function getStaticPaths() {
    try {
        // Obtener todos los artículos
        const response = await fetch(
            `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.ARTICLES}`,
        );
        const data = await response.json();

        if (!data.success || !data.data) {
            return [];
        }

        // Crear una ruta para cada artículo usando el ID
        return data.data.map((article: Article) => {
            return {
                params: { id: article.id.toString() },
                props: { articleId: article.id },
            };
        });
    } catch (error) {
        console.error("Error fetching articles:", error);
        return [];
    }
}

// Obtener el ID del artículo de los parámetros
const { articleId } = Astro.props;

// Función para obtener un artículo específico por ID
async function getArticleById(id: number): Promise<Article | null> {
    try {
        const response = await fetch(
            `${API_CONFIG.BASE_URL}${API_CONFIG.ENDPOINTS.ARTICLE_DETAIL(id)}`,
        );
        const data = await response.json();

        console.log(`Fetched article with ID ${id}:`, data);

        if (data.success) {
            return data.data;
        }
        return null;
    } catch (error) {
        console.error(`Error fetching article with ID ${id}:`, error);
        return null;
    }
}

// Obtener el artículo completo
const article = await getArticleById(articleId);

// Si no se encuentra el artículo, mostrar mensaje de error
if (!article) {
    return Astro.redirect("/404");
}

// Formatear fecha para SEO
const publicationDate = new Date(article.publication_date);
const formattedDate = publicationDate.toISOString();
---

<GeneralLayout
    title={`${article.title} | Urban Arquitectura Blog`}
    description={article.meta_description}
>
    <article class="mt-0">
        <!-- Imagen principal -->
        <div class="relative w-full h-[40vh] md:h-[60vh]">
            <img
                src={article.featured_image}
                alt={article.title}
                class="w-full h-full object-cover"
            />
            <div
                class="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center"
            >
                <div class="text-center px-4 max-w-4xl">
                    <h1
                        class="text-3xl md:text-5xl text-white font-bold mb-4 font-poppins"
                    >
                        {article.title}
                    </h1>
                    <div
                        class="flex items-center justify-center text-white mb-4"
                    >
                        <span class="text-sm"
                            >{article.publication_date_formatted}</span
                        >
                        <span class="mx-2">•</span>
                        <span class="text-sm">Inmobiliaria</span>
                    </div>
                    <div class="flex flex-wrap gap-2 justify-center">
                        {
                            article.keywords.map((keyword: string) => (
                                <span class="text-xs bg-white/20 backdrop-blur-sm text-white px-3 py-1 rounded-full">
                                    {keyword}
                                </span>
                            ))
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Contenido del artículo -->
        <div class="container mx-auto max-w-4xl px-4 py-12">
            <div class="bg-white rounded-lg shadow-lg p-6 md:p-10">
                <!-- Meta información -->
                <div class="mb-8 pb-8 border-b border-gray-200">
                    <p class="text-xl text-gray-700 font-medium mb-6">
                        {article.description}
                    </p>
                    <div class="flex flex-wrap gap-2">
                        {
                            article.keywords.map((keyword: string) => (
                                <span class="text-xs bg-gray-100 text-gray-600 px-3 py-1 rounded-full">
                                    {keyword}
                                </span>
                            ))
                        }
                    </div>
                </div>

                <!-- Contenido principal del artículo con imágenes integradas -->
                <div class="prose prose-lg max-w-none">
                    {
                        /* Primer grupo de imágenes después de la descripción si hay imágenes */
                    }
                    {
                        article.images && article.images.length > 0 && (
                            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-8">
                                {article.images
                                    .slice(0, 2)
                                    .map((image, index) => (
                                        <div class="overflow-hidden rounded-lg shadow-sm">
                                            <img
                                                src={image.url}
                                                alt={`${article.title} - imagen ${index + 1}`}
                                                class="w-full h-auto object-cover"
                                            />
                                        </div>
                                    ))}
                            </div>
                        )
                    }

                    {
                        /* Renderizamos cada componente de contenido según su tipo */
                    }
                    {
                        article.content &&
                            article.content.map((item, index) => {
                                // Después de algunos bloques de contenido, intercalamos imágenes
                                const content = [];

                                // Mostrar diferentes componentes según el tipo
                                if (item.type === "heading") {
                                    content.push(
                                        <h2 class="text-2xl font-bold text-[#2e8d80] mt-6 mb-4 font-poppins">
                                            {item.content}
                                        </h2>,
                                    );
                                } else if (item.type === "subtitle") {
                                    content.push(
                                        <h3 class="text-xl font-semibold text-[#2e8d80] mt-5 mb-3 font-poppins">
                                            {item.content}
                                        </h3>,
                                    );
                                } else if (item.type === "paragraph") {
                                    content.push(
                                        <p class="mb-4 text-gray-700 leading-relaxed">
                                            {item.content}
                                        </p>,
                                    );
                                } else if (item.type === "quote") {
                                    content.push(
                                        <blockquote class="border-l-4 border-[#2e8d80] pl-4 py-2 my-4 bg-gray-50 italic text-gray-700">
                                            {item.content}
                                        </blockquote>,
                                    );
                                } else if (item.type === "list") {
                                    // Si es una lista, los elementos están separados por saltos de línea (\n)
                                    const listItems = Array.isArray(
                                        item.content,
                                    )
                                        ? item.content
                                        : item.content
                                              .split("\n")
                                              .filter(
                                                  (item) => item.trim() !== "",
                                              );

                                    content.push(
                                        <ul class="list-disc pl-5 mb-4">
                                            {listItems.map((listItem) => (
                                                <li class="mb-2 text-gray-700">
                                                    {listItem.trim()}
                                                </li>
                                            ))}
                                        </ul>,
                                    );
                                } else {
                                    content.push(
                                        <p class="mb-4 text-gray-700">
                                            {item.content}
                                        </p>,
                                    );
                                }

                                // Intercalamos imágenes después de ciertos puntos del contenido
                                // Si es un índice par y hay imágenes disponibles, mostrar una imagen después del contenido
                                if (
                                    index % 3 === 0 &&
                                    article.images &&
                                    article.images.length > 2
                                ) {
                                    const imageIndex =
                                        2 + Math.floor(index / 3);
                                    if (imageIndex < article.images.length) {
                                        content.push(
                                            <div class="my-8">
                                                <img
                                                    src={
                                                        article.images[
                                                            imageIndex
                                                        ].url
                                                    }
                                                    alt={`${article.title} - imagen complementaria`}
                                                    class="w-full h-auto rounded-lg shadow-md"
                                                />
                                            </div>,
                                        );
                                    }
                                }

                                return content;
                            })
                    }

                    {
                        /* Si hay más imágenes y no se han mostrado todas, mostrar las restantes al final */
                    }
                    {
                        article.images &&
                            article.images.length >
                                2 +
                                    Math.floor(
                                        article.content?.length / 3 || 0,
                                    ) && (
                                <div class="mt-8 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                                    {article.images
                                        .slice(
                                            2 +
                                                Math.floor(
                                                    article.content?.length /
                                                        3 || 0,
                                                ),
                                        )
                                        .map((image, index) => (
                                            <div class="overflow-hidden rounded-lg shadow-sm">
                                                <img
                                                    src={image.url}
                                                    alt={`${article.title} - imagen adicional ${index + 1}`}
                                                    class="w-full h-auto object-cover"
                                                />
                                            </div>
                                        ))}
                                </div>
                            )
                    }
                </div>

                <!-- Información de publicación -->
                <div
                    class="mt-12 pt-8 border-t border-gray-200 text-gray-500 text-sm"
                >
                    <p>Publicado el {article.publication_date_formatted}</p>
                    <p>
                        Última actualización: {
                            new Date(article.updated_at).toLocaleDateString(
                                "es-MX",
                                {
                                    day: "numeric",
                                    month: "long",
                                    year: "numeric",
                                },
                            )
                        }
                    </p>
                </div>

                <!-- Sección de comentarios -->
                <div class="mt-12 pt-8 border-t border-gray-200">
                    <h3
                        class="text-xl font-bold mb-6 text-gray-800 font-poppins"
                    >
                        Escribir comentario
                    </h3>

                    <!-- Formulario para enviar un comentario -->
                    <form id="comment-form" class="mb-10">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                            <div>
                                <label
                                    for="author_name"
                                    class="block text-sm font-medium text-gray-700 mb-1"
                                    >Nombre</label
                                >
                                <input
                                    type="text"
                                    id="author_name"
                                    name="author_name"
                                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#2e8d80] focus:border-[#2e8d80]"
                                    placeholder="Tu nombre"
                                    required
                                />
                            </div>
                            <div>
                                <label
                                    for="author_email"
                                    class="block text-sm font-medium text-gray-700 mb-1"
                                    >Email</label
                                >
                                <input
                                    type="email"
                                    id="author_email"
                                    name="author_email"
                                    class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#2e8d80] focus:border-[#2e8d80]"
                                    placeholder="Tu email"
                                    required
                                />
                            </div>
                        </div>
                        <div class="mb-4">
                            <label
                                for="content"
                                class="block text-sm font-medium text-gray-700 mb-1"
                                >Comentario</label
                            >
                            <textarea
                                id="content"
                                name="content"
                                rows="4"
                                class="w-full px-4 py-2 border border-gray-300 rounded-md focus:ring-2 focus:ring-[#2e8d80] focus:border-[#2e8d80]"
                                placeholder="Escribe tu comentario aquí..."
                                required></textarea>
                        </div>
                        <div class="flex items-center justify-between">
                            <button
                                type="submit"
                                class="bg-[#2e8d80] text-white px-6 py-2 rounded-md hover:bg-[#267569] transition-colors focus:outline-none focus:ring-2 focus:ring-[#2e8d80] focus:ring-offset-2"
                            >
                                Enviar comentario
                            </button>
                            <div id="form-status" class="text-sm"></div>
                        </div>
                    </form>

                    <!-- Lista de comentarios -->
                    {
                        article.comments && article.comments.length > 0 && (
                            <div>
                                <h4 class="text-lg font-semibold mb-4 text-gray-800">
                                    Comentarios ({article.comments.length})
                                </h4>
                                <div class="space-y-6">
                                    {article.comments.map((comment) => (
                                        <div class="bg-gray-50 p-4 rounded-lg">
                                            <div class="flex items-center mb-2">
                                                <span class="font-medium">
                                                    {comment.author_name ||
                                                        "Usuario anónimo"}
                                                </span>
                                                <span class="mx-2">•</span>
                                                <span class="text-sm text-gray-500">
                                                    {
                                                        comment.created_at_formatted
                                                    }
                                                </span>
                                            </div>
                                            <p class="text-gray-700">
                                                {comment.content ||
                                                    "Sin contenido"}
                                            </p>
                                        </div>
                                    ))}
                                </div>
                            </div>
                        )
                    }
                </div>

                <!-- Compartir en redes sociales -->
                <div class="mt-8">
                    <p class="text-lg font-medium mb-4">
                        Compartir este artículo
                    </p>
                    <div class="flex space-x-4">
                        <a
                            href={`https://www.facebook.com/sharer/sharer.php?u=${Astro.url}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-600 hover:text-blue-800"
                        >
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="currentColor"
                            >
                                <path
                                    d="M9 8h-3v4h3v12h5v-12h3.642l.358-4h-4v-1.667c0-.955.192-1.333 1.115-1.333h2.885v-5h-3.808c-3.596 0-5.192 1.583-5.192 4.615v3.385z"
                                ></path>
                            </svg>
                        </a>
                        <a
                            href={`https://twitter.com/intent/tweet?text=${article.title}&url=${Astro.url}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-400 hover:text-blue-600"
                        >
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="currentColor"
                            >
                                <path
                                    d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"
                                ></path>
                            </svg>
                        </a>
                        <a
                            href={`https://www.linkedin.com/shareArticle?mini=true&url=${Astro.url}&title=${article.title}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-blue-700 hover:text-blue-900"
                        >
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="currentColor"
                            >
                                <path
                                    d="M4.98 3.5c0 1.381-1.11 2.5-2.48 2.5s-2.48-1.119-2.48-2.5c0-1.38 1.11-2.5 2.48-2.5s2.48 1.12 2.48 2.5zm.02 4.5h-5v16h5v-16zm7.982 0h-4.968v16h4.969v-8.399c0-4.67 6.029-5.052 6.029 0v8.399h4.988v-10.131c0-7.88-8.922-7.593-11.018-3.714v-2.155z"
                                ></path>
                            </svg>
                        </a>
                        <a
                            href={`https://api.whatsapp.com/send?text=${article.title} ${Astro.url}`}
                            target="_blank"
                            rel="noopener noreferrer"
                            class="text-green-600 hover:text-green-800"
                        >
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="24"
                                height="24"
                                viewBox="0 0 24 24"
                                fill="currentColor"
                            >
                                <path
                                    d="M.057 24l1.687-6.163c-1.041-1.804-1.588-3.849-1.587-5.946.003-6.556 5.338-11.891 11.893-11.891 3.181.001 6.167 1.24 8.413 3.488 2.245 2.248 3.481 5.236 3.48 8.414-.003 6.557-5.338 11.892-11.893 11.892-1.99-.001-3.951-.5-5.688-1.448l-6.305 1.654zm6.597-3.807c1.676.995 3.276 1.591 5.392 1.592 5.448 0 9.886-4.434 9.889-9.885.002-5.462-4.415-9.89-9.881-9.892-5.452 0-9.887 4.434-9.889 9.884-.001 2.225.651 3.891 1.746 5.634l-.999 3.648 3.742-.981zm11.387-5.464c-.074-.124-.272-.198-.57-.347-.297-.149-1.758-.868-2.031-.967-.272-.099-.47-.149-.669.149-.198.297-.768.967-.941 1.165-.173.198-.347.223-.644.074-.297-.149-1.255-.462-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.297-.347.446-.521.151-.172.2-.296.3-.495.099-.198.05-.372-.025-.521-.075-.148-.669-1.611-.916-2.206-.242-.579-.487-.501-.669-.51l-.57-.01c-.198 0-.52.074-.792.372s-1.04 1.016-1.04 2.479 1.065 2.876 1.213 3.074c.149.198 2.095 3.2 5.076 4.487.709.306 1.263.489 1.694.626.712.226 1.36.194 1.872.118.571-.085 1.758-.719 2.006-1.413.248-.695.248-1.29.173-1.414z"
                                ></path>
                            </svg>
                        </a>
                    </div>
                </div>
            </div>

            <!-- Artículos relacionados -->
            <!-- <div class="mt-12">
                <h3 class="text-2xl font-bold mb-6 text-gray-800 font-poppins">
                    Artículos relacionados
                </h3>
                <p class="text-gray-600 mb-8">
                    Estos artículos pueden interesarte
                </p>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                    <div class="bg-white rounded-lg overflow-hidden shadow-md">
                        <img
                            src="http://th7vkryfyi.sharedwithexpose.com/storage/placeholder/blog-image-2.jpg"
                            alt="Artículo relacionado"
                            class="w-full h-48 object-cover"
                        />
                        <div class="p-4">
                            <h4 class="font-bold text-gray-800 mb-2">
                                Guía para inversionistas inmobiliarios
                            </h4>
                            <p class="text-sm text-gray-600">
                                Todo lo que necesitas saber antes de invertir en
                                propiedades.
                            </p>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg overflow-hidden shadow-md">
                        <img
                            src="http://th7vkryfyi.sharedwithexpose.com/storage/placeholder/blog-image-1.jpg"
                            alt="Artículo relacionado"
                            class="w-full h-48 object-cover"
                        />
                        <div class="p-4">
                            <h4 class="font-bold text-gray-800 mb-2">
                                Tendencias de diseño arquitectónico
                            </h4>
                            <p class="text-sm text-gray-600">
                                Las tendencias que están definiendo la
                                arquitectura moderna.
                            </p>
                        </div>
                    </div>

                    <div class="bg-white rounded-lg overflow-hidden shadow-md">
                        <img
                            src="http://th7vkryfyi.sharedwithexpose.com/storage/placeholder/blog-image-2.jpg"
                            alt="Artículo relacionado"
                            class="w-full h-48 object-cover"
                        />
                        <div class="p-4">
                            <h4 class="font-bold text-gray-800 mb-2">
                                Cómo financiar tu primera propiedad
                            </h4>
                            <p class="text-sm text-gray-600">
                                Opciones de financiamiento para compradores
                                primerizos.
                            </p>
                        </div>
                    </div>
                </div>
            </div> -->
        </div>
    </article>
</GeneralLayout>

<style>
    /* Estilos para el contenido de tipo blog */
    .prose h2 {
        font-family: "Poppins", sans-serif;
        color: #2e8d80;
        margin-top: 2rem;
        margin-bottom: 1rem;
        font-size: 1.75rem;
    }

    .prose h3 {
        font-family: "Poppins", sans-serif;
        color: #2e8d80;
        margin-top: 1.5rem;
        margin-bottom: 0.75rem;
        font-size: 1.35rem;
    }

    .prose p {
        margin-bottom: 1.5rem;
        line-height: 1.8;
    }

    .prose ul {
        margin-bottom: 1.5rem;
        padding-left: 1.5rem;
    }

    .prose li {
        margin-bottom: 0.5rem;
    }

    .prose blockquote {
        background-color: #f8f9fa;
        border-left: 4px solid #2e8d80;
        padding: 1.25rem;
        margin: 1.5rem 0;
        font-style: italic;
        color: #4a5568;
    }

    .prose strong {
        color: #2e8d80;
    }
</style>

<script is:inline>
    // Importar la configuración de la API directamente en el script del cliente
    const apiConfig = {
        BASE_URL: "http://urbancms.up.railway.app/api/",
        ENDPOINTS: {
            ARTICLES: "articles",
            ARTICLE_DETAIL: function (id) {
                return `articles/${id}`;
            },
            ARTICLE_COMMENTS: function (id) {
                return `articles/${id}/comments`;
            },
        },
    };

    // Función para enviar comentarios
    document.addEventListener("DOMContentLoaded", function () {
        const commentForm = document.getElementById("comment-form");
        const formStatus = document.getElementById("form-status");

        if (commentForm) {
            commentForm.addEventListener("submit", async function (e) {
                e.preventDefault();

                // Cambiar estado del botón
                const submitButton = commentForm.querySelector(
                    'button[type="submit"]',
                );
                if (!submitButton) return;

                const originalButtonText =
                    submitButton.textContent || "Enviar comentario";
                submitButton.textContent = "Enviando...";
                // Usamos setAttribute para evitar errores de tipo con disabled
                submitButton.setAttribute("disabled", "true");

                // Obtener datos del formulario con casting explícito
                const authorNameInput = /** @type {HTMLInputElement} */ (
                    document.getElementById("author_name")
                );
                const authorEmailInput = /** @type {HTMLInputElement} */ (
                    document.getElementById("author_email")
                );
                const contentInput = /** @type {HTMLTextAreaElement} */ (
                    document.getElementById("content")
                );

                if (
                    !authorNameInput ||
                    !authorEmailInput ||
                    !contentInput ||
                    !formStatus
                ) {
                    console.error(
                        "No se encontraron los campos del formulario",
                    );
                    return;
                }

                const authorName = authorNameInput.value;
                const authorEmail = authorEmailInput.value;
                const content = contentInput.value;
                const articleId =
                    window.location.pathname.split("/").pop() || "";

                try {
                    // Crear la URL manualmente con la función del endpoint
                    const commentsUrl = `${apiConfig.BASE_URL}${apiConfig.ENDPOINTS.ARTICLE_COMMENTS(articleId)}`;

                    // Enviar comentario
                    const response = await fetch(commentsUrl, {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json",
                            Accept: "application/json",
                        },
                        body: JSON.stringify({
                            author_name: authorName,
                            author_email: authorEmail,
                            content: content,
                        }),
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Mostrar mensaje de éxito
                        formStatus.textContent =
                            "¡Comentario enviado exitosamente!";
                        formStatus.className = "text-sm text-green-600";

                        // Usamos la propiedad reset solo si es un HTMLFormElement
                        if (typeof commentForm.reset === "function") {
                            commentForm.reset();
                        }

                        // Recargar la página después de 2 segundos para mostrar el nuevo comentario
                        setTimeout(function () {
                            window.location.reload();
                        }, 2000);
                    } else {
                        // Mostrar mensaje de error
                        formStatus.textContent =
                            result.message ||
                            "Error al enviar el comentario. Inténtalo de nuevo.";
                        formStatus.className = "text-sm text-red-600";
                    }
                } catch (error) {
                    // Mostrar mensaje de error
                    if (formStatus) {
                        formStatus.textContent =
                            "Error al enviar el comentario. Inténtalo de nuevo.";
                        formStatus.className = "text-sm text-red-600";
                    }
                    console.error("Error:", error);
                } finally {
                    // Restaurar estado del botón
                    if (submitButton) {
                        submitButton.textContent = originalButtonText;
                        // Usamos removeAttribute para evitar errores de tipo con disabled
                        submitButton.removeAttribute("disabled");
                    }
                }
            });
        }
    });
</script>
