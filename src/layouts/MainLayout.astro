---
import "../tailwind.css";

interface Props {
    title: string;
    description: string;
    image?: string;
    frontSlideImage?: ImageMetadata;
    frontSlideMobileImage?: ImageMetadata;
}

const { title, description, image, frontSlideImage, frontSlideMobileImage } =
    Astro.props;
---

<!doctype html>
<html lang="es">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>{title}</title>
        <meta name="description" content={description} />
        <meta name="generator" content={Astro.generator} />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />

        <!-- Preload critical fonts -->
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />

        <!-- Add preload for the first carousel image if available -->
        {
            frontSlideImage && (
                <link
                    rel="preload"
                    href={frontSlideImage.src}
                    as="image"
                    media="(min-width: 513px)"
                    fetchpriority="high"
                />
            )
        }

        {
            frontSlideMobileImage && (
                <link
                    rel="preload"
                    href={frontSlideMobileImage.src}
                    as="image"
                    media="(max-width: 512px)"
                    fetchpriority="high"
                />
            )
        }

        <!-- Add default Open Graph tags -->
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        {image && <meta property="og:image" content={image} />}
        <meta property="og:type" content="website" />
        <meta name="twitter:card" content="summary_large_image" />

        <!-- For browsers that support early hints -->
        <meta http-equiv="x-dns-prefetch-control" content="on" />

        <script>
            // Force LCP image preload
            const preloadLCP = () => {
                const ua = navigator.userAgent;
                const isMobile = ua.match(
                    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i,
                );

                // Use the appropriate image based on device
                const selector = isMobile ? ".mobile-image" : ".desktop-image";

                // Set a timeout to ensure this runs after the browser has painted
                setTimeout(() => {
                    const firstImage = document.querySelector(
                        `.carousel-slide[data-index="0"] ${selector}`,
                    );
                    if (firstImage && firstImage instanceof HTMLImageElement) {
                        firstImage.loading = "eager";
                        firstImage.fetchPriority = "high";
                        firstImage.decoding = "sync";
                    }
                }, 0);
            };

            // Execute immediately
            preloadLCP();
        </script>
    </head>
    <body>
        <slot />
    </body>
</html>
