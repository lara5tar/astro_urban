---
import "../tailwind.css";
import { Image } from "astro:assets";
import logoMovil from "/src/public/icons/logo_movil.webp";
import logoWeb from "/src/public/icons/logo_web.svg";

interface Props {
    links?: { text: string; url: string }[];
}

const {
    links = [
        { text: "PORTAFOLIO", url: "/portafolio" },
        { text: "TALLERES", url: "/talleres" },
        { text: "CONTACTO", url: "/contact" },
    ],
} = Astro.props;
---

<nav
    class="fixed top-0 left-0 right-0 flex justify-between items-center px-4 md:px-8 bg-black z-50 pt-safe"
    style="height: calc(5rem + env(safe-area-inset-top));"
>
    <div class="flex items-center">
        <a href="/" class="flex items-center">
            <div class="block md:hidden">
                <Image
                    src={logoMovil}
                    widths={[64, 96, 120]}
                    sizes="(max-width: 640px) 64px, (max-width: 1024px) 96px, 120px"
                    alt="Logo Urban Arquitectura Construcción"
                    class="h-auto w-16 md:w-24 max-w-none"
                    decoding="async"
                    loading="eager"
                />
            </div>
            <!-- Logo Desktop - SVG Inline para carga instantánea -->
            <div class="hidden md:block">
                <Image
                    src={logoWeb}
                    widths={[64, 96, 120]}
                    sizes="(max-width: 640px) 64px, (max-width: 1024px) 96px, 120px"
                    alt="Logo Urban Arquitectura Construcción"
                    class="h-auto w-16 md:w-24 max-w-none"
                    decoding="async"
                    loading="eager"
                />
            </div>
        </a>
    </div>

    <!-- Desktop Navigation Links -->
    <div class="hidden md:flex md:gap-8">
        {
            links.map((link) => (
                <a
                    href={link.url}
                    class="text-white font-montserrat md:text-[0.9rem] text-xs font-normal tracking-wider hover:text-gray-200 transition-colors duration-300 relative group"
                >
                    {link.text}
                    <span class="absolute bottom-[-5px] left-0 w-0 h-0.5 bg-white shadow-glow transition-all duration-300 ease-in-out group-hover:w-full" />
                </a>
            ))
        }
    </div>

    <!-- Mobile Hamburger Menu Button -->
    <button
        id="mobile-menu-button"
        class="md:hidden text-white flex flex-col justify-center items-center gap-1.5"
        aria-label="Menu"
    >
        <span class="w-6 h-0.5 bg-white transition-all duration-300"></span>
        <span class="w-6 h-0.5 bg-white transition-all duration-300"></span>
        <span class="w-6 h-0.5 bg-white transition-all duration-300"></span>
    </button>

    <!-- Mobile Navigation Menu -->
    <div
        id="mobile-menu"
        class="fixed inset-0 bg z-50 transform translate-x-full transition-transform duration-300 ease-in-out md:hidden flex flex-col justify-center items-center"
    >
        <button
            id="close-mobile-menu"
            class="absolute text-white"
            aria-label="Close menu"
        >
            <span
                class="block w-6 h-0.5 bg-white transform rotate-45 translate-y-0.5"
            ></span>
            <span class="block w-6 h-0.5 bg-white transform -rotate-45"></span>
        </button>

        <div class="h-10"></div>

        <div class="flex flex-col items-center gap-8">
            {
                links.map((link) => (
                    <a
                        href={link.url}
                        class="text-white font-montserrat text-xl font-normal tracking-wider hover:text-gray-200 transition-colors duration-300 relative group"
                    >
                        {link.text}
                        <span class="absolute bottom-[-5px] left-0 w-0 h-0.5 bg-white shadow-glow transition-all duration-300 ease-in-out group-hover:w-full" />
                    </a>
                ))
            }
        </div>
    </div>
</nav>

<script>
    // Mobile menu functionality
    document.addEventListener("DOMContentLoaded", () => {
        const mobileMenuButton = document.getElementById("mobile-menu-button");
        const closeMenuButton = document.getElementById("close-mobile-menu");
        const mobileMenu = document.getElementById("mobile-menu");

        if (mobileMenuButton && mobileMenu && closeMenuButton) {
            mobileMenuButton.addEventListener("click", () => {
                mobileMenu.classList.remove("translate-x-full");
                document.body.style.overflow = "hidden";
            });

            closeMenuButton.addEventListener("click", () => {
                mobileMenu.classList.add("translate-x-full");
                document.body.style.overflow = "";
            });

            // Close menu when clicking on links
            const mobileLinks = mobileMenu.querySelectorAll("a");
            mobileLinks.forEach((link) => {
                link.addEventListener("click", () => {
                    mobileMenu.classList.add("translate-x-full");
                    document.body.style.overflow = "";
                });
            });
        }
    });
</script>

<style>
    .bg {
        background-color: #000000;
        opacity: 0.8;
    }

    /* Only minimal custom styling for the shadow glow effect */
    .shadow-glow {
        box-shadow: 0 0 4px rgba(255, 255, 255, 0.5);
    }

    /* For iOS safe area */
    .pt-safe {
        padding-top: env(safe-area-inset-top, 0);
    }

    /* Asegura que los SVG se rendericen correctamente */
    svg {
        display: block;
        shape-rendering: geometricPrecision;
        text-rendering: optimizeLegibility;
        width: auto;
        height: 100%;
        max-height: 45px;
        overflow: visible;
    }

    /* Estilo específico para el logo móvil */
    .block.md\:hidden svg {
        transform-origin: left center;
        margin-left: 0.5rem; /* Añade un pequeño margen izquierdo */
    }

    /* Mobile menu button styles */
    #mobile-menu-button {
        height: 24px;
        width: 24px;
        position: relative;
    }

    #mobile-menu-button span {
        transition:
            transform 0.3s ease-in-out,
            opacity 0.3s ease-in-out;
    }

    /* Close button styles */
    #close-mobile-menu {
        height: 24px;
        width: 24px;
        position: relative;
    }

    /* Prevent scrolling when menu is open */
    body.menu-open {
        overflow: hidden;
    }
</style>
